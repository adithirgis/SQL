CREATE TABLE employees (
    id INT PRIMARY KEY,
    name VARCHAR(50),
    age INT,
    department VARCHAR(50),
    salary DECIMAL(10,2),
    joining_date DATE
);

INSERT INTO employees (id, name, age, department, salary, joining_date)
VALUES (1, 'Alice', 25, 'HR', 50000, '2020-03-15');

UPDATE employees SET salary = 75000 WHERE id = 2;

DELETE FROM employees WHERE id = 5;

SELECT * FROM employees;

SELECT name, department FROM employees WHERE age > 30;

SELECT * FROM employees ORDER BY salary DESC;

SELECT department, AVG(salary) FROM employees GROUP BY department HAVING AVG(salary) > 60000;

SELECT * FROM employees LIMIT 3;

GRANT SELECT, INSERT ON employees TO 'user1';

REVOKE INSERT ON employees FROM 'user1';

BEGIN;
UPDATE employees SET salary = 60000 WHERE department = 'HR';
COMMIT;

BEGIN;
DELETE FROM employees WHERE department = 'Sales';
ROLLBACK;

SAVEPOINT before_update;
UPDATE employees SET salary = 90000 WHERE id = 3;
ROLLBACK TO before_update;

SELECT employees.name, departments.department_name
FROM employees
INNER JOIN departments ON employees.department = departments.id;

SELECT employees.name, departments.department_name
FROM employees
LEFT JOIN departments ON employees.department = departments.id;

SELECT employees.name, departments.department_name
FROM employees
RIGHT JOIN departments ON employees.department = departments.id;

SELECT name FROM employees WHERE salary > (SELECT AVG(salary) FROM employees);

SELECT name, salary,
    CASE 
        WHEN salary > 70000 THEN 'High'
        WHEN salary BETWEEN 50000 AND 70000 THEN 'Medium'
        ELSE 'Low'
    END AS salary_category
FROM employees;

ALTER TABLE employees ADD COLUMN email VARCHAR(100);

DROP TABLE employees;

TRUNCATE TABLE employees;

CREATE TABLE employees (
    id INT PRIMARY KEY,
    name VARCHAR(50),
    age INT,
    department VARCHAR(50),
    salary DECIMAL(10,2),
    joining_date DATE
);

INSERT INTO employees VALUES
(1, 'Alice', 25, 'HR', 50000, '2020-03-15'),
(2, 'Bob', 30, 'IT', 70000, '2018-06-20'),
(3, 'Carol', 28, 'Sales', 55000, '2019-09-10'),
(4, 'Dave', 35, 'IT', 80000, '2015-11-23'),
(5, 'Eve', 26, 'Marketing', 60000, '2021-07-30');

